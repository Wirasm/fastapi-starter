[tool.poetry]
name = "fastapi-starter"
version = "0.1.0"
description = "A modular monolithic starter template for FastAPI"
authors = ["Rasmus <rasmus.widing@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.112.0"
uvicorn = "^0.32.0"
sqlalchemy = "^2.0.36"
asyncpg = "^0.29.0"
pyjwt = "^2.9.0"
python-dotenv = "^1.0.1"
alembic = "^1.13.3"
pydantic = {extras = ["email"], version = "^2.9.2"}
python-multipart = "^0.0.12"
greenlet = "^3.1.1"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
bcrypt = "^4.1.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
httpx = "^0.27.2"
pytest-cov = "^5.0.0"
ruff = "^0.4.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",  # PEP8 naming conventions
    "D"  # pydocstyle
]
ignore = [
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "D401"  # imperative mood
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.poetry.scripts]
start = "uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload"
lint = "ruff check ."
format = "ruff format ."
lint-fix = "ruff check --fix ."
